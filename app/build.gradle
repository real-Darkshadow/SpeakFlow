plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
    id 'com.google.firebase.crashlytics'
    id 'dagger.hilt.android.plugin'
    id 'com.google.firebase.firebase-perf'
    id 'androidx.navigation.safeargs.kotlin'
    id 'org.jetbrains.kotlin.android'

}

android {
    compileSdk 33
    defaultConfig {
        applicationId "com.app.speak"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        renderscriptTargetApi 33//must match target sdk and build tools
        renderscriptSupportModeEnabled true
        vectorDrawables {
            useSupportLibrary true
        }
    }



    buildTypes {
        internationalDebug {
            initWith debug
            getProps('./app/config/dev-env.properties').each { p ->
                buildConfigField 'String', p.key, p.value
            }
        }

        debug {
            getProps('./app/config/dev-env.properties').each { p ->
                buildConfigField 'String', p.key, p.value
            }
            resValue "string", "functions_base_url", "\"http://127.0.0.1:5001\""
        }

        release {
            getProps('./app/config/prod-env.properties').each { p ->
                buildConfigField 'String', p.key, p.value
            }
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    android {
        configurations {
            all*.exclude module: 'bcprov-jdk15on'
        }

        splits {
            // Configures multiple APKs based on ABI.
            abi {
                // Enables building multiple APKs per ABI.
                enable true

                // By default all ABIs are included, so use reset() and include to specify that we only
                // want APKs for x86, armeabi-v7a, and mips.
                reset()

                // Specifies a list of ABIs that Gradle should create APKs for.
                include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"

                // Specifies that we want to also generate a universal APK that includes all ABIs.
                universalApk true
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
        kotlinOptions {
            jvmTarget = '11'
        }
        buildFeatures {
            compose true
            viewBinding true
        }
        composeOptions {
            kotlinCompilerExtensionVersion compose_version
        }
        packagingOptions {
            resources {
                excludes += '/META-INF/{AL2.0,LGPL2.1}'
            }
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}


def getProps(path) {
    Properties props = new Properties()
    print(path)
    props.load(new FileInputStream(rootProject.file(path)))
    return props
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.10"
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.media3:media3-ui:1.1.0'
    implementation 'com.google.android.gms:play-services-ads:22.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    //noinspection GradleDynamicVersion
    implementation 'com.amplitude:analytics-android:1+'

    // Recommended: Add the Firebase SDK for Google Analytics.
    implementation 'com.google.firebase:firebase-analytics-ktx:21.3.0'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.4.0'
    implementation 'com.google.firebase:firebase-inappmessaging-display-ktx:20.3.2'
    implementation 'com.google.firebase:firebase-perf-ktx:20.4.0'
    implementation 'com.google.firebase:firebase-config-ktx:21.4.1'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.2.0'
    //Image Parsing Library
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.work:work-runtime-ktx:2.8.1'
    implementation 'com.google.firebase:firebase-auth-ktx:22.1.0'
    implementation 'com.google.firebase:firebase-firestore-ktx:24.7.0'
    implementation 'com.google.firebase:firebase-functions-ktx:20.3.1'
    implementation 'com.google.mlkit:text-recognition:16.0.0'


    implementation 'com.github.dhaval2404:imagepicker:2.1'


    // Google Core library
    implementation 'com.google.android.play:core:1.10.3'
    implementation 'com.google.android.play:core-ktx:1.8.1'


    implementation 'com.airbnb.android:lottie:6.0.0'

    implementation 'com.google.android.gms:play-services-auth:20.6.0'


    def lifecycle_version = "2.6.1"

    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4")

    //Dagger hilt
    implementation 'com.google.dagger:hilt-android:2.46.1'
    kapt 'com.google.dagger:hilt-android-compiler:2.44'

    def nav_version = "2.5.3"
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Compose related dependencies
    def compose_version = '1.1.0-beta01'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha09"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation 'com.stripe:stripe-android:20.27.3'


}

kapt {
    correctErrorTypes true
}
